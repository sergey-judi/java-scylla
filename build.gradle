plugins {
  id 'java'
  id 'idea'
  id 'jacoco'
  id 'org.springframework.boot' version '3.2.1'
  id 'io.spring.dependency-management' version '1.1.4'
  id 'com.github.ksoichiro.console.reporter' version '0.6.3'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  springBootVersion = '3.2.2'
  nettyVersion = '4.1.106.Final'
  lombokVersion = '1.18.30'
  cassandraMigrationVersion = '2.6.1_v4'
  testcontainersVersion = '1.19.7'

  coverageExclusions = [
          '**/config/**',
          '**/dto/**',
          '**/entity/**',
          '**/exception/**',
          '**/utility/**',
          '**/*Application*'
  ]
}

dependencies {
  implementation "org.springframework.boot:spring-boot-starter-webflux"
  implementation "org.springframework.boot:spring-boot-starter-validation"
  implementation "org.springframework.boot:spring-boot-starter-data-cassandra-reactive"
  implementation "org.cognitor.cassandra:cassandra-migration-spring-boot-starter:$cassandraMigrationVersion"

  compileOnly "org.projectlombok:lombok:${lombokVersion}"
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
  testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  testImplementation "org.springframework.boot:spring-boot-starter-test"
  testImplementation "io.projectreactor:reactor-test"
  testImplementation "org.testcontainers:cassandra:${testcontainersVersion}"
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  afterEvaluate {
    classDirectories.setFrom(files(classDirectories.files.collect {
      fileTree(dir: it, excludes: coverageExclusions)
    }))
  }
  reports {
    xml.required = true
  }
}

check.dependsOn("jacocoTestReport")

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    mavenBom "io.netty:netty-bom:$nettyVersion"
  }
}
